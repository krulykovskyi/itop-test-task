{"version":3,"sources":["components/Clock.js","components/Button.js","App.js","index.js"],"names":["Clock","hours","minutes","seconds","milliseconds","className","class","Button","btnName","onClick","onDblClick","App","useState","time","setTime","interval","setInterv","start","setInterval","run","updatedHours","updatedMinutes","updatedSeconds","updatedMilliseconds","clearInterval","ReactDOM","render","document","getElementById"],"mappings":"gOAEO,SAASA,EAAT,GAA2D,IAA1CC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,QAASC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,aAC/C,OACE,qBAAKC,UAAU,QAAf,SACE,sBAAKC,MAAM,sEAAX,UACE,qBAAKD,UAAU,MAAf,SAAsBJ,EAAQ,GAAR,WAAiBA,GAAUA,IACjD,oCACA,qBAAKI,UAAU,MAAf,SAAsBH,EAAU,GAAV,WAAmBA,GAAYA,IACrD,oCACA,qBAAKG,UAAU,MAAf,SAAsBF,EAAU,GAAV,WAAmBA,GAAYA,IACrD,oCACA,qBAAKE,UAAU,MAAf,SAAsBD,EAAe,GAAf,WAAwBA,GAAiBA,SCVhE,SAASG,EAAT,GAAmD,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,QAASC,EAAa,EAAbA,WAC1C,OACE,wBACEL,UAAU,SACVI,QAASA,EACTC,WAAYA,EAHd,SAKGF,I,MC8FQG,MAlGf,WACE,MAAwBC,mBAAS,CAC/BX,MAAO,EACPC,QAAS,EACTC,QAAS,EACTC,aAAc,IAJhB,mBAAOS,EAAP,KAAaC,EAAb,KAMA,EAA8BF,mBAAS,MAAvC,mBAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAQ,WACZD,EAAUE,YAAYC,EAAK,KAC3BA,KA8BIA,EAAM,WACV,OAAOL,GAAQ,SAACD,GACd,IAAIO,EAAeP,EAAKZ,MACpBoB,EAAiBR,EAAKX,QACtBoB,EAAiBT,EAAKV,QACtBoB,EAAsBV,EAAKT,aAgB/B,OAduB,KAAnBiB,IACFD,IACAC,EAAiB,GAEI,KAAnBC,IACFD,IACAC,EAAiB,GAES,MAAxBC,IACFD,IACAC,EAAsB,GAIjB,CACLtB,MAAOmB,EACPlB,QAASmB,EACTlB,QAASmB,EACTlB,eANFmB,OAWJ,OACE,qBAAKlB,UAAU,OAAf,SACE,sBAAKA,UAAU,YAAf,UACE,cAACL,EAAD,eACOa,IAEP,cAACN,EAAD,CACEC,QAAQ,QACRC,QAASQ,IAEX,cAACV,EAAD,CACEC,QAAQ,OACRC,QArEK,WACXe,cAAcT,GACdD,EAAQ,CACNb,MAAO,EACPC,QAAS,EACTC,QAAS,EACTC,aAAc,OAiEZ,cAACG,EAAD,CACEC,QAAQ,OACRC,QA/DK,WACXe,cAAcT,MAgEV,cAACR,EAAD,CACEC,QAAQ,QACRC,QA/DM,WACZe,cAAcT,GACdD,EAAQ,CACNb,MAAO,EACPC,QAAS,EACTC,QAAS,EACTC,aAAc,IAEhBa,aCpCJQ,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.030354fa.chunk.js","sourcesContent":["import React from \"react\";\n\nexport function Clock({ hours, minutes, seconds, milliseconds }) {\n  return (\n    <div className=\"clock\">\n      <div class=\"block box is-flex is-align-items-baseline is-justify-content-center\">\n        <div className=\"box\">{hours < 10 ? `0${hours}` : hours}</div>\n        <div>:</div>\n        <div className=\"box\">{minutes < 10 ? `0${minutes}` : minutes}</div>\n        <div>:</div>\n        <div className=\"box\">{seconds < 10 ? `0${seconds}` : seconds}</div>\n        <div>:</div>\n        <div className=\"box\">{milliseconds < 10 ? `0${milliseconds}` : milliseconds}</div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport function Button ({ btnName, onClick, onDblClick}) {\n  return (\n    <button\n      className=\"button\"\n      onClick={onClick}\n      onDblClick={onDblClick}\n    >\n      {btnName}\n    </button>\n  );\n}\n","import React, { useState } from 'react';\nimport { Clock } from './components/Clock';\nimport { Button } from './components/Button';\nimport './App.css';\n\nfunction App() {\n  const [time, setTime] = useState({\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n    milliseconds: 0,\n  });\n  const [interval, setInterv] = useState(null);\n\n  const start = () => {\n    setInterv(setInterval(run, 10));\n    run();\n  }\n\n  const stop = () => {\n    clearInterval(interval);\n    setTime({\n      hours: 0,\n      minutes: 0,\n      seconds: 0,\n      milliseconds: 0,\n    });\n  }\n\n  const wait = () => { \n    clearInterval(interval);\n  }\n\n  const reset = () => {\n    clearInterval(interval);\n    setTime({\n      hours: 0,\n      minutes: 0,\n      seconds: 0,\n      milliseconds: 0,\n    });\n    start()\n  }\n\n  \n\n  const run = () => {\n    return setTime((time) => {\n      let updatedHours = time.hours;\n      let updatedMinutes = time.minutes;\n      let updatedSeconds = time.seconds;\n      let updatedMilliseconds = time.milliseconds;\n      \n      if (updatedMinutes === 60) {\n        updatedHours++;\n        updatedMinutes = 0;\n      }\n      if (updatedSeconds === 60) {\n        updatedMinutes++;\n        updatedSeconds = 0;\n      }\n      if (updatedMilliseconds === 100) {\n        updatedSeconds++;\n        updatedMilliseconds = 0;\n      }\n      updatedMilliseconds++;\n\n      return {\n        hours: updatedHours,\n        minutes: updatedMinutes,\n        seconds: updatedSeconds,\n        milliseconds: updatedMilliseconds,\n      }\n    });\n  }\n\n  return (\n    <div className=\"main\">\n      <div className=\"container\">\n        <Clock\n          { ...time }\n        />\n        <Button\n          btnName=\"Start\"\n          onClick={start}\n        />\n        <Button\n          btnName=\"Stop\"\n          onClick={stop}\n        />\n        <Button\n          btnName=\"Wait\"\n          onClick={wait}\n        />\n        <Button\n          btnName=\"Reset\"\n          onClick={reset}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}